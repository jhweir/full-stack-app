{"version":3,"sources":["components/post.js","components/search-bar.js","components/wall-filters.js","components/create-post-modal.js","components/wall-header.js","pages/wall.js","pages/homepage.js","components/navbar.js","app.js","index.js"],"names":["post","addLike","props","className","this","id","title","description","onClick","likes","jsx","Component","SearchBar","state","searchInput","onChange","event","setState","target","value","onSubmit","preventDefault","searchFilter","type","placeholder","WallFilters","dropdownVisible","dropdownToggle","SortById","SortByLikes","CreatePostModal","newPost","titleError","descriptionError","e","posts","length","name","hidePostModal","style","showHidePostModal","height","paddingTop","rows","WallHeader","showPostModal","display","wall","searchText","sortBy","text","console","log","filteredPosts","filter","el","indexOf","sort","a","b","map","key","deletePost","React","Homepage","padding","checked","readOnly","NavBar","toggleDarkMode","document","body","classList","toggle","to","marginLeft","App","getPosts","axios","get","then","res","data","submitPost","method","url","put","response","catch","error","exact","path","component","render","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.220ff5e1.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class post extends Component {\r\n    // componentDidMount() {\r\n    //     console.log(this.props.post)\r\n    // }\r\n    addLike = () => {\r\n        this.props.addLike(this.props.post)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"post\">\r\n                <div className=\"post-id\">{this.props.post.id}</div>\r\n                <div className=\"post-content\">\r\n                    <div className=\"post-title\">{this.props.post.title}</div>\r\n                    <div className=\"post-description\">{this.props.post.description}</div>\r\n                    <div className=\"post-interact\">\r\n                        <div className=\"post-likes\" onClick={this.addLike}>\r\n                            <div className=\"like-button\"/>\r\n                            <span>{this.props.post.likes} Likes</span>\r\n                        </div>\r\n                        {/* <button className=\"button\">Delete</button> */}\r\n                    </div>\r\n                </div>\r\n\r\n                <style jsx=\"true\">{`\r\n                    .post {\r\n                        margin-bottom: 10px;\r\n                        padding: 20px 20px 20px 0;\r\n                        border-radius: 5px;\r\n                        background-color: white;\r\n                        box-shadow: 0 1px 10px 0 rgba(10, 8, 72, 0.08);\r\n                        display: flex;\r\n                        flex-direction: row;\r\n                        transition-property: background-color;\r\n                        transition-duration: 2s;\r\n                    }\r\n                    .post-id {\r\n                        width: 60px;\r\n                        display: flex;\r\n                        flex-direction: row;\r\n                        justify-content: center;\r\n                        align-items: center;\r\n                        flex-shrink: 0;\r\n                        color: #aaa;\r\n                    }\r\n                    .post-content {\r\n                        flex-direction: column;\r\n                        justify-content: center;\r\n                        align-items: center;\r\n                    }\r\n                    .post-title {\r\n                        color: black;\r\n                        font-size: 24px;\r\n                        font-weight: 600;\r\n                        text-decoration: none;\r\n                        padding-bottom: 10px;\r\n                        transition-property: color;\r\n                        transition-duration: 2s;\r\n                    }\r\n                    .post-description {\r\n                        color: black;\r\n                        font-size: 16px;\r\n                        font-weight: 400;\r\n                        text-decoration: none;\r\n                        padding-bottom: 10px;\r\n                        transition-property: color;\r\n                        transition-duration: 2s;\r\n                    }\r\n                    .post-interact {\r\n                        display: flex;\r\n                        flex-direction: row;\r\n                        align-items: center;\r\n                        flex-shrink: 0;\r\n                    }\r\n                    .post-likes {\r\n                        display: flex;\r\n                        flex-direction: row;\r\n                        align-items: center;\r\n                        flex-shrink: 0;\r\n                        margin-right: 10px;\r\n                        color: #888;\r\n                    }\r\n                    .post-likes:hover {\r\n                        cursor: pointer;\r\n                    }\r\n                    .like-button {\r\n                        background-image: url(./icons/heart-solid.svg);\r\n                        background-color: transparent;\r\n                        border: none;\r\n                        height: 17px;\r\n                        width: 17px;\r\n                        padding: 0;\r\n                        opacity: 0.4;\r\n                        margin-right: 5px;\r\n                    }\r\n                `}</style>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default post\r\n","import React, { Component } from 'react'\r\n// import colors from '../tokens/Colors';\r\n\r\nexport class SearchBar extends Component {\r\n    state = {\r\n        searchInput: ''\r\n    }\r\n\r\n    onChange = (event) => this.setState({ searchInput: event.target.value });\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.searchFilter(this.state.searchInput);\r\n        this.setState({ searchInput: '' });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"input-wrapper\" onSubmit={this.onSubmit}>\r\n                <input\r\n                    className=\"input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Search posts...\"\r\n                    value={this.state.searchInput}\r\n                    onChange={this.onChange}\r\n                />\r\n                <button className=\"search-button\"></button>\r\n\r\n                <style jsx=\"true\">{`\r\n                    .search-button {\r\n                        background-image: url(./icons/search.svg);\r\n                        background-color: transparent;\r\n                        border: none;\r\n                        height: 20px;\r\n                        width: 20px;\r\n                        padding: 0;\r\n                        opacity: 0.6;\r\n                    }\r\n                `}</style>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar\r\n","import React, { Component } from 'react'\r\n// import colors from '../tokens/Colors';\r\n\r\nexport class WallFilters extends Component {\r\n    state = {\r\n        dropdownVisible: false\r\n    }\r\n\r\n    dropdownToggle = () => this.setState({ dropdownVisible: !this.state.dropdownVisible })\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wall-filters\">\r\n                {/* <button className=\"button\" onClick={this.props.SortById}>\r\n                    Sort By ID\r\n                </button>\r\n                <button className=\"button\" onClick={this.props.SortByLikes}>\r\n                    Sort By Likes\r\n                </button> */}\r\n\r\n                <button className=\"button\" onClick={this.dropdownToggle}>\r\n                    Filters\r\n                </button>\r\n                <div className={\"dropdown-content \" + (this.state.dropdownVisible ? 'visible' : '')}>\r\n                    <div className=\"dropdown-item\" onClick={this.props.SortById}>Sort by ID</div>\r\n                    <div className=\"dropdown-item\" onClick={this.props.SortByLikes}>Sort by Likes</div>\r\n                </div>\r\n\r\n                <style jsx=\"true\">{`\r\n                    .wall-filters {\r\n                        display: flex;\r\n                        flex-direction: row;\r\n                        align-items: center;\r\n                    }\r\n                    .dropdown-content {\r\n                        display: none;\r\n                        width: 200px;\r\n                        border-radius: 5px;\r\n                        background-color: white;\r\n                        box-shadow: 0 1px 10px 0 rgba(10, 8, 72, 0.2);\r\n                        position: absolute;\r\n                        top: 130px;\r\n                        left: calc(50% - 20px)\r\n                    }\r\n                    .dropdown-item {\r\n                        height: 40px;\r\n                        border-radius: 5px;\r\n                        display: flex;\r\n                        flex-direction: row;\r\n                        align-items: center;\r\n                        justify-content: center;\r\n                    }\r\n                    .dropdown-item:hover {\r\n                        background-color: #eee;\r\n                    }\r\n                    .visible {\r\n                        display: block;\r\n                    }\r\n\r\n                `}</style>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WallFilters\r\n","import React, { Component } from 'react'\r\n\r\nexport class CreatePostModal extends Component {\r\n    state = {\r\n        newPost: {\r\n            title: '',\r\n            description: ''\r\n        },\r\n        titleError: false,\r\n        descriptionError: false\r\n    }\r\n    \r\n    onChange = (e) => this.setState({ newPost: { ...this.state.newPost, id: this.props.posts.length + 1, likes: 0, [e.target.name]: e.target.value} });\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {title, description} = this.state.newPost;\r\n        if (title && description !== '') {\r\n            this.props.newPost(this.state.newPost);\r\n            this.setState({ newPost: {title: '', description: ''} });\r\n            this.props.hidePostModal();\r\n        } else if (title === '') {\r\n            this.setState({ titleError: true });\r\n        } if (description === '') {\r\n            this.setState({ descriptionError: true });\r\n        }\r\n    }\r\n\r\n    hidePostModal = () => {\r\n        this.setState({ titleError: false, descriptionError: false });\r\n        this.props.hidePostModal()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal-wrapper\" style={this.props.showHidePostModal}>\r\n\r\n                <div className=\"create-post-modal\">\r\n                    <span className=\"page-title\">Create a new post</span>\r\n                    <form onSubmit={this.onSubmit} className=\"create-post-form\">\r\n                        <input \r\n                            className={\"input-wrapper modal margin-bottom-20 \" + (this.state.titleError ? 'error' : '')}\r\n                            type=\"text\"\r\n                            placeholder=\"Post title...\"\r\n                            name=\"title\"\r\n                            value={this.state.newPost.title}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        <textarea\r\n                            className={\"input-wrapper modal margin-bottom-20 \" + (this.state.descriptionError ? 'error' : '')}\r\n                            style={{height:'auto', paddingTop:10}}\r\n                            rows=\"5\"\r\n                            type=\"text\"\r\n                            placeholder=\"Post description...\"\r\n                            name=\"description\"\r\n                            value={this.state.newPost.description}\r\n                            onChange={this.onChange}\r\n                        ></textarea>\r\n                        <div className=\"button-container\">\r\n                            <button className=\"button\">Post</button>\r\n                            <div className=\"button\" onClick={this.hidePostModal}>Cancel</div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <style jsx=\"true\">{`\r\n                    .modal-wrapper {\r\n                        position: fixed;\r\n                        top: 0;\r\n                        left: 0;\r\n                        width: 100%;\r\n                        height: 100%;\r\n                        background-color: rgba(0,0,0,0.4);\r\n                        z-index: 1;\r\n                        animation-name: fade-in;\r\n                        animation-duration: 0.5s;\r\n                    }\r\n                    .create-post-modal {\r\n                        position: absolute;\r\n                        top: 150px;\r\n                        left: calc(50% - 250px);\r\n                        width: 500px;\r\n                        //height: 600px;\r\n                        padding: 40px;\r\n                        background-color: white;\r\n                        box-shadow: 0 1px 30px 0 rgba(0,0,0,0.2);\r\n                        border-radius: 5px;\r\n                        display: flex;\r\n                        flex-direction: column;\r\n                        align-items: center;\r\n                    }\r\n                    .create-post-form {\r\n                        display: flex;\r\n                        flex-direction: column;\r\n                        justify-content: center;\r\n                        align-items: center;\r\n                    }\r\n                    .button-container {\r\n                        display: flex;\r\n                        flex-direction: row;\r\n                        align-items: center;\r\n                    }\r\n                `}</style>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreatePostModal","import React, { Component } from 'react';\r\nimport SearchBar from './search-bar';\r\nimport WallFilters from './wall-filters';\r\nimport CreatePostModal from './create-post-modal';\r\n// import colors from '../tokens/Colors';\r\n\r\nexport class WallHeader extends Component {\r\n    state = {\r\n        showPostModal: false\r\n    }\r\n    showPostModal = () => {\r\n        this.setState({ showPostModal: true });\r\n    }\r\n    hidePostModal = () => {\r\n        this.setState({ showPostModal: false });\r\n    }\r\n    render() {\r\n        const showHidePostModal = this.state.showPostModal ? {display:\"flex\"} : {display:\"none\"};\r\n\r\n        return (\r\n            <div className=\"wall-header\">\r\n\r\n                <button className=\"button\" onClick={this.showPostModal}>Create Post</button>\r\n\r\n                <CreatePostModal posts={this.props.posts} newPost={this.props.newPost} showHidePostModal={showHidePostModal} hidePostModal={this.hidePostModal}/>\r\n\r\n                <SearchBar searchFilter={this.props.searchFilter}/>\r\n\r\n                <WallFilters SortById={this.props.SortById} SortByLikes={this.props.SortByLikes}/>\r\n\r\n                <style jsx=\"true\">{`\r\n                    .wall-header {\r\n                        width: 100%;\r\n                        padding: 10px 0;\r\n                        display: flex;\r\n                        flex-direction: row;\r\n                        align-items: center;\r\n                        flex-wrap: wrap;\r\n                    }\r\n                `}</style>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WallHeader\r\n","import React from 'react'\r\nimport Post from '.././components/post'\r\n\r\nimport WallHeader from '../components/wall-header';\r\n\r\nclass wall extends React.Component {\r\n    state = {\r\n        searchText: '',\r\n        sortBy: 'id'\r\n    }\r\n\r\n    searchFilter = (text) => {\r\n        console.log(text)\r\n        this.setState({ searchText: text });\r\n    }\r\n\r\n    SortById = () => this.setState({ sortBy: 'id' });\r\n\r\n    SortByLikes = () => this.setState({ sortBy: 'likes' });\r\n\r\n    render() {\r\n        let usablePosts = this.props.posts.filter((el) => { return el != null})\r\n        let filteredPosts = usablePosts.filter((post) => {\r\n            return post.title.indexOf(this.state.searchText) !== -1;\r\n        })\r\n\r\n        if (this.state.sortBy === 'id') {\r\n            filteredPosts = filteredPosts.sort((a, b) => a.id - b.id)\r\n        }\r\n        if (this.state.sortBy === 'likes') {\r\n            filteredPosts = filteredPosts.sort((a, b) => b.likes - a.likes)\r\n        }\r\n\r\n        return (\r\n            <div className=\"wall\">\r\n                <WallHeader posts={this.props.posts} newPost={this.props.newPost} searchFilter={this.searchFilter} SortById={this.SortById} SortByLikes={this.SortByLikes}/>\r\n\r\n                <ul className=\"wall-list\">\r\n                    {filteredPosts\r\n                        .map((post) => {\r\n                            return <Post key={post.id} post={post} deletePost={this.props.deletePost} addLike={this.props.addLike}/>\r\n                        })\r\n                    }\r\n                </ul>\r\n\r\n                <style jsx=\"true\">{`\r\n                    .wall {\r\n                        width: 600px;\r\n                        padding: 0 10px;\r\n                        display: flex;\r\n                        flex-direction: column;\r\n                        justify-content: center;\r\n                        align-items: center;\r\n                    }\r\n\r\n                    .wall-list {\r\n                        padding: 0;\r\n                        width: 100%;\r\n                    }\r\n\r\n                    @media screen and (max-width: 700px) {\r\n                        .wall {\r\n                            width: 100%;\r\n                        }\r\n                    }\r\n                `}</style>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default wall\r\n","import React, { Component } from 'react';\r\n\r\nexport class Homepage extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"homepage\">\r\n                <span className=\"page-title\">Component tree and features</span>\r\n                <ul style={{padding:0}}>\r\n                    <li><input type=\"checkbox\" checked=\"checked\" readOnly></input> App</li>\r\n                    <ul>\r\n                        <li><input type=\"checkbox\" checked=\"checked\" readOnly></input> NavBar</li>\r\n                        <ul>\r\n                            <li><input type=\"checkbox\" checked=\"checked\" readOnly></input> Dark mode</li>\r\n                        </ul>\r\n                        <li><input type=\"checkbox\" checked=\"checked\" readOnly></input> Homepage</li>\r\n                        <li><input type=\"checkbox\" checked=\"checked\" readOnly></input> Wall</li>\r\n                        <ul>\r\n                            <li><input type=\"checkbox\" checked=\"checked\" readOnly></input> WallHeader</li>\r\n                            <ul>\r\n                                <li><input type=\"checkbox\" checked=\"checked\" readOnly></input> CreatePostModal</li>\r\n                                <ul>\r\n                                    <li><input type=\"checkbox\" checked=\"checked\" readOnly></input> Add title</li>\r\n                                    <li><input type=\"checkbox\" checked=\"checked\" readOnly></input> Add description</li>\r\n                                    <li><input type=\"checkbox\" checked=\"\" readOnly></input> Add tags</li>\r\n                                </ul>\r\n                                <li><input type=\"checkbox\" checked=\"checked\" readOnly></input> SearchBar</li>\r\n                                <ul>\r\n                                    <li><input type=\"checkbox\" checked=\"checked\" readOnly></input> Search by text</li>\r\n                                </ul>\r\n                                <li><input type=\"checkbox\" checked=\"checked\" readOnly></input> WallFilters</li>\r\n                                <ul>\r\n                                    <li><input type=\"checkbox\" checked=\"checked\" readOnly></input> Sort by ID</li>\r\n                                    <li><input type=\"checkbox\" checked=\"checked\" readOnly></input> Sort by Likes</li>\r\n                                    <li><input type=\"checkbox\" checked=\"\" readOnly></input> Sort by Date</li>\r\n                                    <li><input type=\"checkbox\" checked=\"\" readOnly></input> Sort by Comments</li>\r\n                                </ul>\r\n                            </ul>\r\n                            <li><input type=\"checkbox\" checked=\"checked\" readOnly></input> Posts</li>\r\n                        </ul>\r\n                        <li><input type=\"checkbox\" checked=\"\" readOnly></input> Branches</li>\r\n                        <li><input type=\"checkbox\" checked=\"\" readOnly></input> Users</li>\r\n                    </ul>\r\n                </ul>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <span className=\"page-title\">To do</span>\r\n                <ul style={{padding:0}}>\r\n                    <li><input type=\"checkbox\" checked=\"\" readOnly></input> Post like fix</li>\r\n                    <li><input type=\"checkbox\" checked=\"\" readOnly></input> Authentication</li>\r\n                    <li><input type=\"checkbox\" checked=\"\" readOnly></input> Users page</li>\r\n                    <li><input type=\"checkbox\" checked=\"\" readOnly></input> Pin posts</li>\r\n                    <li><input type=\"checkbox\" checked=\"\" readOnly></input> Global state managment using context</li>\r\n                    <li><input type=\"checkbox\" checked=\"\" readOnly></input> Scrape URLs for post data</li>\r\n                    <li><input type=\"checkbox\" checked=\"\" readOnly></input> Resize and save thumbnails</li>\r\n                    <li><input type=\"checkbox\" checked=\"\" readOnly></input> Individual post pages</li>\r\n                    <li><input type=\"checkbox\" checked=\"\" readOnly></input> Comments</li>\r\n                </ul>\r\n                <style jsx=\"true\">{`\r\n                    .homepage {\r\n                        display: flex;\r\n                        flex-direction: column;\r\n                        align-items: center;\r\n                        padding: 20px;\r\n                        color: black;\r\n                        transition-property: color;\r\n                        transition-duration: 2s;\r\n                    }\r\n                    ul {\r\n                        list-style-type: none;\r\n                    }\r\n                    li {\r\n                        list-style-type: none;\r\n                    }\r\n                `}</style>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Homepage\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// import colors from '../tokens/Colors';\r\n\r\n\r\nclass NavBar extends React.Component {\r\n    toggleDarkMode = () => {\r\n        document.body.classList.toggle(\"dark-mode\");\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"navbar\">\r\n                <Link to=\"/\" className=\"navbar-text\">Home</Link> |\r\n                <Link to=\"/wall\" className=\"navbar-text\"> Wall</Link>\r\n                <div style={{ marginLeft: 20 }} className=\"button\" onClick={this.toggleDarkMode}>Dark mode</div>\r\n    \r\n                <style jsx=\"true\">{`\r\n                    .navbar {\r\n                        color: white;\r\n                        width: 100%;\r\n                        height: 60px;\r\n                        background-color: #222;\r\n                        display: flex;\r\n                        flex-direction: row;\r\n                        align-items: center;\r\n                        justify-content: center;\r\n                        transition-property: background-color;\r\n                        transition-duration: 2s;\r\n                    }\r\n                    .navbar-text {\r\n                        color: white;\r\n                        font-size: 24px;\r\n                        font-weight: 600;\r\n                        text-decoration: none;\r\n                        padding: 10px;\r\n                    }\r\n                `}</style>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react';\n\nimport Wall from './pages/wall'\nimport Homepage from './pages/homepage';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport NavBar from './components/navbar';\n\nimport axios from 'axios'\n\nclass App extends React.Component {\n  state = {\n    posts: []\n  }\n  componentDidMount() {\n    this.getPosts()\n  }\n  getPosts = () => {\n    axios.get('http://176.34.156.27/api/posts') // http://localhost:5000/api/posts\n      .then(res => {\n        // console.log(res.data)\n        this.setState({ posts: res.data })\n      })\n  }\n  submitPost = (post) => {\n    axios({ method: 'post', url: 'http://176.34.156.27/api/posts', data: { post } }) // http://localhost:5000/api/posts\n      .then(res => {\n        console.log(res);\n      })\n  }\n  addLike = (post) => {\n    console.log(post)\n    axios.put('http://176.34.156.27/api/posts', { post }) // http://localhost:5000/api/posts\n    .then(response => {\n      if (response.data === 'Post liked') {\n        console.log('success');\n        this.getPosts()\n      }\n    })\n    .catch(error => {\n      console.log(error)\n    })\n  }\n  render() {\n    return (\n      <Router>\n      <div className=\"app\">\n        <NavBar/>\n        {/* <CreatePost posts={this.state.posts} newPost={this.newPost}/>\n        <Wall posts={this.state.posts}/> */}\n        <Route exact path=\"/\" component={Homepage} />\n        <Route path=\"/wall\" render={props => (\n          <Wall className=\"wall\" posts={this.state.posts} newPost={this.submitPost} deletePost={this.deletePost} addLike={this.addLike}/>\n        )}/>\n      </div>\n      <style jsx=\"true\">{`\n        .app {\n          width: 100%;\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n        }\n      `}</style>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport './styles/app.scss';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n// serviceWorker.unregister();\n"],"sourceRoot":""}